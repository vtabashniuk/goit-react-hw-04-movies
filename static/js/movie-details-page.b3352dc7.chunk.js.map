{"version":3,"file":"static/js/movie-details-page.b3352dc7.chunk.js","mappings":"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","sources":["components/api/fetchFunctions.js","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'df60f1682cfdb2a273d4df0e1e89ea6f';\nconst axiosParams = {\n  params: { api_key: API_KEY },\n};\n\nexport const getImagePath = async () => {\n  const path = await axios.get(`${BASE_URL}/configuration`, axiosParams);\n  return path.data.images;\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/week`, axiosParams);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const details = await axios.get(`${BASE_URL}/movie/${id}`, axiosParams);\n  return details.data;\n};\n\nexport const getCast = async id => {\n  const cast = await axios.get(`${BASE_URL}/movie/${id}/credits`, axiosParams);\n  return cast.data.cast.map(item => {\n    return {\n      ...{\n        original_name: item.original_name,\n        character: item.character,\n        popularity: item.popularity,\n        profile_path: item.profile_path,\n      },\n    };\n  });\n};\n\nexport const getReviews = async id => {\n  const reviews = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews`,\n    axiosParams\n  );\n  return reviews.data.results.map(item => {\n    return {\n      ...{\n        author: item.author,\n        content: item.content,\n      },\n    };\n  });\n};\n\nexport const searchMovie = async query => {\n  const movies = await axios.get(`${BASE_URL}/search/movie`, {\n    params: { api_key: API_KEY, query },\n  });\n\n  return movies.data.results;\n};\n","import React, { Component } from 'react';\nimport { getCast, getImagePath } from 'components/api/fetchFunctions';\n\nclass Cast extends Component {\n  state = {\n    casts: [],\n  };\n\n  async componentDidMount() {\n    const baseProfilePath = `${(await getImagePath()).base_url}${(\n      await getImagePath()\n    ).profile_sizes.find(sizes => sizes === 'w185')}`;\n    const cast = await getCast(this.props.match.params.movieId);\n    cast.map(element => {\n      return (element.profile_path = `${baseProfilePath}${element.profile_path}`);\n    });\n\n    this.setState({ casts: cast.filter(item => item.popularity > 7) });\n  }\n\n  render() {\n    return (\n      <>\n        <h2>Cast</h2>\n        <ul className=\"castList\">\n          {this.state.casts.map((item, index) => (\n            <li key={index} className=\"castItem\">\n              <div className=\"castBox\">\n                <img src={item.profile_path} alt={`${item.original_name}`} />\n                <h4>Name: {item.original_name}</h4>\n                <p>Character: {item.character}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Cast;\n","import React, { Component } from 'react';\nimport { getReviews } from 'components/api/fetchFunctions';\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n\n  async componentDidMount() {\n    const reviewsArr = await getReviews(this.props.match.params.movieId);\n\n    this.setState({ reviews: reviewsArr });\n  }\n\n  render() {\n    return (\n      <div className=\"reviewBlock\">\n        <h2>Reviews</h2>\n        {this.state.reviews.length > 0 ? (\n          <ul className=\"reviewList\">\n            {this.state.reviews.map((item, index) => (\n              <li key={index} className='reviewItem'>\n                <div className='reviewInfo'>\n                  <h4>Author: {item.author}</h4>\n                  <p className=\"reviewText\">Review: {item.content}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>There is no reviews yet.</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n","import React, { Component } from 'react';\nimport { getImagePath, getMovieDetails } from 'components/api/fetchFunctions';\nimport { NavLink, Route } from 'react-router-dom';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n\nclass MovieDetailsPage extends Component {\n  state = {\n    title: '',\n    poster_path: '',\n    release_date: '',\n    genres: [],\n    overview: '',\n  };\n\n  componentDidMount = async () => {\n    const configResult = await getImagePath();\n    const basePosterPath = `${\n      configResult.base_url\n    }${configResult.poster_sizes.find(sizes => sizes === 'w342')}`;\n\n    const { title, poster_path, release_date, genres, overview } =\n      await getMovieDetails(this.props.match.params.movieId);\n\n    this.setState({\n      title,\n      poster_path: `${basePosterPath}${poster_path}`,\n      release_date,\n      genres,\n      overview,\n    });\n  };\n\n  goBachHandler = () => {\n    const { history, location } = this.props;\n    history.push(location?.state?.from || '/');\n  };\n\n  render() {\n    const { title, poster_path, release_date, genres, overview } = this.state;\n    const { match, location } = this.props;\n    return (\n      <div className=\"container\">\n        <button type=\"button\" onClick={this.goBachHandler}>\n          &#8666; Go back\n        </button>\n        <h1 className=\"movieTitle\">{title}</h1>\n        <div className=\"movieThumb\">\n          <img\n            className=\"movieImage\"\n            src={poster_path}\n            alt={`Poster: ${title}`}\n          />\n          <div className=\"movieDescription\">\n            <p>Release date: {release_date}</p>\n            <h3>Genres:</h3>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n            <h3>Overview</h3>\n            <p className=\"movieOverview\">{overview}</p>\n            <h3>Additional info</h3>\n            <ul className=\"movieAdditionalList\">\n              <li>\n                <NavLink\n                  to={{\n                    pathname: `${match.url}/cast`,\n                    state: { from: location.state.from },\n                  }}\n                  className=\"movieAdditional\"\n                  activeClassName=\"movieAdditionalActive\"\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={{\n                    pathname: `${match.url}/reviews`,\n                    state: { from: location.state.from },\n                  }}\n                  className=\"movieAdditional\"\n                  activeClassName=\"movieAdditionalActive\"\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"castAndReviews\">\n          <Route path={`${match.path}/cast`} component={Cast} />\n          <Route path={`${match.path}/reviews`} component={Reviews} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default MovieDetailsPage;\n"],"names":["BASE_URL","API_KEY","axiosParams","params","api_key","getImagePath","axios","path","data","images","getTrending","response","results","getMovieDetails","id","details","getCast","cast","map","item","original_name","character","popularity","profile_path","getReviews","reviews","author","content","searchMovie","query","movies","Cast","state","casts","base_url","profile_sizes","find","sizes","baseProfilePath","this","props","match","movieId","element","setState","filter","className","index","src","alt","Component","Reviews","reviewsArr","length","MovieDetailsPage","title","poster_path","release_date","genres","overview","componentDidMount","configResult","basePosterPath","poster_sizes","goBachHandler","history","location","push","from","type","onClick","name","to","pathname","url","activeClassName","component"],"sourceRoot":""}